server.port=8080
################ POSTGRESQL ###################
# spring.jpa.database=POSTGRESQL
# spring.datasource.platform=postgres
# spring.datasource.url=jdbc:postgresql://rogue.db.elephantsql.com:5432/upheqgpi
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.datasource.username=upheqgpi
# spring.datasource.password=8OP1b5zrg9ywFWNY9AInv1Y0d6Aga5m7

######################## H2 #########################
spring.h2.console.enabled=true
spring.h2.console.path=/h2

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
# spring.datasource.data=data_role.sql
spring.jpa.defer-datasource-initialization=true

################### JPA ##############################
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# spring.datasource.data=classpath:db/data.sql

############# THYMELEAF ###############
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.check-template-location=true
# spring.thymeleaf.suffix=.html
# spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

# LOGGING --> para ver querys que lanza
spring.output.ansi.enabled=always
logging.level.web=INFO
logging.level.org.springframework.jdbc.core=TRACE

######################### VERIFICATION TOKEN #######################
# 60 * 60 * 8 // setting as 8 hours,
jdj.secure.token.validity=28800
site.base.url.http=http://localhost:8080
site.base.url.https=https://localhost:8080

################### JavaMail Configuration ##########################
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=mypockettrainerteam@gmail.com
spring.mail.password=MPT2021#
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# API
#recipesAPI.url = https://api.spoonacular.com/recipes/findByNutrients?apiKey=c560265e3d784567bbeb7dbf246fa624&number=3&random=true&maxCalories=
#spoonacularKey = apiKey=c560265e3d784567bbeb7dbf246fa624
#recipesAPIinfo1.url = https://api.spoonacular.com/recipes/
#recipesAPIinfo2.url = /information?&apiKey=c560265e3d784567bbeb7dbf246fa624
#trainingAPI.url = https://wger.de/api/v2/exercise/?limit=1&offset=

# OAuth keys
# ID de cliente --> 664422681775-87855p0511ljk5457k9qv64cjpk9ka09.apps.googleusercontent.com
# Secreto del cliente --> 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

spring.security.oauth2.client.registration.google.client-id=664422681775-87855p0511ljk5457k9qv64cjpk9ka09.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

# wger api key = 6bdac2c8e276239c9682474d3f417c36f190e622
# spoonacular api key = 7bb354a13517443fae3de15b4475d594
